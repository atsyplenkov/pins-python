name: CI

on:
  workflow_dispatch:
  push:
    branches: ['main', 'dev-*']
  pull_request:
  release:
    types: [published]

jobs:
  tests:
    name: "Tests"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10"]
        include:
          - os: "macos-latest"
            # ignore doctests, as they involve calls to github, and all mac machines
            # use the same IP address
            pytest_opts: "-k pins/tests"
          - os: "ubuntu-latest"
            pytest_opts:
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[test]
      - name: Run tests
        run: |
          pytest pins -m 'not fs_rsc and not skip_on_github' $PYTEST_OPTS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"
          PYTEST_OPTS: ${{ matrix.pytest_opts}}

  test-rsconnect:
    name: "Test RSConnect"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/dev.txt
          python -m pip install -e .
      - name: run RStudio Connect
        run: |
          docker-compose up --build -d
          make dev
        env:
          RSC_LICENSE: ${{ secrets.RSC_LICENSE }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      # NOTE: edited to run checks for python package
      - name: Run tests
        run: |
          pytest pins -m 'fs_rsc and not skip_on_github'

  build-docs:
    name: "Build Docs"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2

        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/dev.txt
          python -m pip install -e .
          ipython kernel install --name "venv-pins-python" --user
      - uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.17.0.1'
      - name: Build docs
        run: |
          make docs-build
      - name: Save docs artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs-html
          path: docs/_build/html/

  publish-docs:
    name: "Publish Docs"
    runs-on: ubuntu-latest
    needs: ["build-docs", "tests", "test-rsconnect"]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: docs-html
          path: docs-html
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs-html
